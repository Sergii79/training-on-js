{"mappings":"YAAAA,QAAQC,IAAI,YAqBZD,QAAQC,IAAI,SAGI,IAAVC,EAAI,CAAC,QAAS,QAeKA,EAAvBC,SAAS,SACXD,EAAEC,SAAS,QAAS,QAEJ,0BAKWC,MAAM,IAAIC,KAAK,KAAKD,MAAM,KASlCJ,QAAXC,IAAI,SAcZ,IAAMK,EAAS,CAAC,OAAQ,SACxBA,EAAOC,KAAK,aACMD,EAAOE,OAKRF,EAAOG,QAGxBH,EAAOI,QAAQ,UAAW,UAC1BV,QAAQC,IAAIK,GAGZN,QAAQC,IAAI,SAaZ,IAEMU,EAFS,OAEWP,MAAM,KAChCJ,QAAQC,IAAIU,GAEZ,IAAMC,EAASD,EAAW,GAAKA,EAAW,GAC1CX,QAAQC,IAAIW,GAGZZ,QAAQC,IAAI,SASZ,IAAMY,EAAS,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,MAG5BC,GAAP,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYN,EAAMO,OAAAC,cAAlBP,GAAAI,EAAAC,EAAQG,QAAAC,MAART,GAAQ,EAAY,CAApB,IAAIU,EAAJN,EAAQO,MACLC,EAAQb,EAAOc,QAAQH,GAAQ,EACrCxB,QAAQC,IAAI,GAAa2B,OAAVF,EAAM,MAASE,OAALJ,G,WAFtBT,GAAQ,EAARC,EAAQa,C,aAARf,GAAQ,MAARK,EAAQW,QAARX,EAAQW,Q,YAARf,E,MAAAC,C,EAKL,IAAK,IAAIe,EAAI,EAAGA,EAAIlB,EAAOL,OAAQuB,GAAK,EACtC/B,QAAQC,IAAI,GAAa2B,OAAVG,EAAI,EAAE,MAAcH,OAAVf,EAAOkB,KAKlC/B,QAAQC,IAAI,SAqBZ,IANA,IAGM+B,EAHQ,gCAGW5B,MAAM,KACzB6B,EAHS,oDAGY7B,MAAM,KAExB8B,EAAI,EAAGA,EAAIF,EAAWxB,OAAQ0B,GAAK,EAC1ClC,QAAQC,IAAI,GAAqB2B,OAAlBI,EAAWE,GAAG,MAAmBN,OAAfK,EAAYC,KAI/ClC,QAAQC,IAAI,SASZ,IACMkC,EADS,0CACYC,OAAOhC,MAAM,KAExC+B,EAAYE,MACZF,EAAY1B,QAEZ,IAAM6B,EAASH,EAAY9B,KAAK,KAChCL,QAAQC,IAAIqC,GAGZtC,QAAQC,IAAI,SAuBZD,QAAQC,IAAI,SAQZ,IAAMsC,EAAQ,CAAC,SAAU,aAAc,MAAO,SAAU,MAAO,QAC/DA,EAAMC,OACNxC,QAAQC,IAAIsC,GAGZvC,QAAQC,IAAI,SAWZ,IAHA,IAAMwC,EAAU,CAAC,EAAG,GAAI,GAAI,GAAG,GAAK,GAAI,IAEpCC,EAAMD,EAAQ,GACTE,EAAI,EAAGA,EAAIF,EAAQjC,OAAQmC,GAAK,EACnCD,EAAMD,EAAQE,KAChBD,EAAMD,EAAQE,IAIlB3C,QAAQC,IAAIyC,E","sources":["src/js/03-module-2_function_Lesson-3.js"],"sourcesContent":["console.log('Lesson 3');\n\n//–ü–∏—Ç–∞–Ω–Ω—è\n// const clients = [\"Mango\", \"Poly\", \"Ajax\", 1,2,3,4,5,6,7,8,8,6,5,4,57,,5756,765,75,7,645,64];\n// const lastElementIndex = clients.length - 1;\n\n// console.log(lastElementIndex); // 2\n// console.log(clients[lastElementIndex]); // \"Ajax\"\n\n// const someArray = [\"Mango\", \"Ajax\", \"Poly\"];\n\n// for (const user of someArray) {\n//   console.log(user);\n// }\n\n// const stringe = 'javascript';\n\n// for (const character of stringe) {\n//   console.log(character);\n// }\n\nconsole.log('-----');\n\n// –¢–ê–ö –†–û–ë–ò–¢–ò –ù–ï –¢–†–ï–ë–ê!\nconst a = ['Mango', 'Ajax'];\nconst b = a;\nconst c = a + b;\n// const v = c;\n\n// c.push('Hi');\n// v.push('hello');\n// b.push('I am b');\n\n// console.log(a);\n// console.log(b);\n// console.log(c);\n// console.log(v);\n\n// Includes –ø—Ä–∏–π–º–∞—î —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç\na.includes('Mango'); // will work\na.includes('Mango', 'Ajax'); // will not work.\n\nconst message = 'I love JavaScript a lot';\n// const lowMessage = message.toLowerCase();\n// result = lowMessage.includes('spam') || lowMessage.includes('sale');\n\n// 1.\nconst characters = message.split('').join(' ').split(' ');\n// console.log(characters);\n\n//2.\n// const words = message.split(' ');\n// console.log(words)\n\n// # –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç—Ç—è 3. –ú–∞—Å–∏–≤–∏\n\nconsole.log('-----');\n\n// ## Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º\n\n// 1. –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ `genres` –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.\n// 2. –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.\n// 3. –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.\n// 4. –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.\n//–ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É\n//    –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.\n// 5. –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.\n// 6. –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.\n\n// ```js\nconst genres = ['Jazz', 'Blues'];\ngenres.push('–†–æ–∫-–Ω-—Ä–æ–ª');\nconst lastIndex = genres.length - 1;\n\n// console.log(genres[0]);\n// console.log(genres[lastIndex]);\n\nconst firsElem = genres.shift();\n// console.log(firsElem)\n\ngenres.unshift('Country', 'Reggae');\nconsole.log(genres);\n// ```\n\nconsole.log('-----');\n\n// ## Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è\n// —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π `values` —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ\n// —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.\n\n/**\n * 1. —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ —Ä–∞—è–¥–æ–∫ –Ω–∞ –∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞. split\n * 2. –ø–µ—Ä–µ–º–Ω–æ–∂–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è\n */\n// ```js\nconst values = '8 11';\n\nconst sizesArray = values.split(' ');\nconsole.log(sizesArray);\n\nconst square = sizesArray[0] * sizesArray[1];\nconsole.log(square);\n// ```\n\nconsole.log('-----');\n\n// ## Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É `fruits` —Ü–∏–∫–ª–æ–º `for`. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞\n// –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ `–Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞`.\n// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ `1`.\n\n// ```js\nconst fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];\n// –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞ = 1: 'üçé'\n\nfor (let item of fruits) {\n  const index = fruits.indexOf(item) + 1;\n  console.log(`${index}: ${item}`);\n}\n\nfor (let i = 0; i < fruits.length; i += 1) {\n  console.log(`${i + 1}: ${fruits[i]}`);\n}\n\n// ```\n\nconsole.log('-----');\n\n// ## Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£\n// –∑–º—ñ–Ω–Ω–∏—Ö `names` —Ç–∞ `phones` –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,\n// —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞\n// –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.\n\n/**\n * 1. –†–æ–∑–¥—ñ–ª–∏—Ç–∏ —Ä–∞—è–¥–∫–∏ –Ω–∞ –º–∞—Å–∏–≤–∏. split\n * 2. –ü–µ—Ä–µ–±—Ä–∞—Ç–∏ –æ–¥–∏–Ω –∑ –º–∞—Å–∏–≤—ñ–≤. –ó –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —ñ–Ω–¥–µ–∫—Å–∞ for\n * 3. –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ —ñ–Ω–¥–µ–∫—Å—É —ñ–º º—è —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω\n */\n// ```js\nconst names = 'Jacob,William,Solomon,Artemis';\nconst phones = '89001234567,89001112233,890055566377,890055566300';\n\nconst namesArray = names.split(',');\nconst phonesArray = phones.split(',');\n\nfor (let i = 0; i < namesArray.length; i += 1) {\n  console.log(`${namesArray[i]}: ${phonesArray[i]}`);\n}\n// ```\n\nconsole.log('-----');\n\n// ## Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ\n// –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è\n// —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.\n\n// ```js\nconst string = '    Welcome to the future. Be Happy!   ';\nconst stringArray = string.trim().split(' ');\n\nstringArray.pop();\nstringArray.shift();\n\nconst result = stringArray.join(' ');\nconsole.log(result);\n// ```\n\nconsole.log('-----');\n\n// ## Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å\n// –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.\n\n// ```js\nconst string1 = 'Welcome to the future';\n\n//1\n// const stringarray = string1.split('').reverse();\n// console.log(stringarray.join(''))\n\n//2\n// let resultStr = '';\n// for (let i = string1.length - 1; i >= 0; i -= 1 ) {\n//   resultStr += string1[i]\n// }\n// console.log(resultStr)\n\n// ```\n\nconsole.log('-----');\n\n// ## Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é\n// –µ–ª–µ–º–µ–Ω—Ç–∞.\n\n// ```js\nconst langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];\nlangs.sort();\nconsole.log(langs);\n// ```\n\nconsole.log('-----');\n\n// ## Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞\n\n// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è\n// –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.\n\n// ```js\nconst numbers = [2, 17, 94, 1, -10, 23, 37];\n\nlet min = numbers[0];\nfor (let i = 1; i < numbers.length; i += 1) {\n  if (min > numbers[i]) {\n    min = numbers[i];\n  }\n}\n\nconsole.log(min); // 1\n// ```\n"],"names":["console","log","$badd4503ead933df$var$a","includes","split","join","$badd4503ead933df$var$genres","push","length","shift","unshift","$badd4503ead933df$var$sizesArray","$badd4503ead933df$var$square","$badd4503ead933df$var$fruits","$badd4503ead933df$var$_iteratorNormalCompletion","$badd4503ead933df$var$_didIteratorError","$badd4503ead933df$var$_iteratorError","undefined","$badd4503ead933df$var$_step","$badd4503ead933df$var$_iterator","Symbol","iterator","next","done","$badd4503ead933df$var$item","value","$badd4503ead933df$var$index","indexOf","concat","err","return","$badd4503ead933df$var$i","$badd4503ead933df$var$namesArray","$badd4503ead933df$var$phonesArray","$badd4503ead933df$var$i1","$badd4503ead933df$var$stringArray","trim","pop","$badd4503ead933df$var$result","$badd4503ead933df$var$langs","sort","$badd4503ead933df$var$numbers","$badd4503ead933df$var$min","$badd4503ead933df$var$i2"],"version":3,"file":"03-module-2_function_Lesson-3.9e5dd717.js.map"}