{"mappings":"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","sources":["src/js/07-module-4_iterative_methods_lesson-7.js"],"sourcesContent":["console.log('–ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç—Ç—è 7. –ö–æ–ª–ª–±–µ–∫–∏. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó. forEach');\n\n/** –ü—Ä–∏–∫–ª–∞–¥–∏ –∑ –∫–∞—Ö—É—Ç—É */\n\n// function foo (fn) {\n//   fn()\n// }\n\nfunction logger(message) {\n  // console.log(arguments)\n  return true;\n}\n\n// const logger = message => {\n//   console.log(arguments)\n//   return message\n// }\n\n// const logger = (a, b) => a + b\n// const logger = (message, a) => message;\n// const logger = (a, b) => {\n//   return a + b\n// }\n\n// foo(logger)\n// logger()\n\nconsole.log('---Example 1---');\n\n// ## Example 1 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:\n\n// - `createProduct(obj, callback)` - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂\n//   –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É\n//   –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å `id` —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.\n// - `logProduct(product)` - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤\n//   –∫–æ–Ω—Å–æ–ª—å\n// - `logTotalPrice(product)` - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É\n//   –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å\n\n/**\n * 1. –î–æ–¥–∞—Ç–∏ –¥–æ –æ–± º—î–∫—Ç–∞ ID\n * 2. –ü–µ—Ä–µ–¥–∞—Ç–∏ –æ–± º—î–∫—Ç –≤ –∫–æ–ª–±–µ–∫\n */\nfunction createProduct(obj, callback) {\n  const object = {\n    ...obj,\n    id: Date.now(),\n  };\n\n  callback(object);\n}\n\nfunction logProduct(product) {\n  console.log(product);\n}\n\nfunction logTotalPrice(product) {\n  console.log(product.price * product.quantity);\n}\n\nfunction doubleQuantity({ quantity }) {\n  console.log(quantity * 2);\n}\n\nconst product = { name: 'Tomato', price: 10, quantity: 43 };\ncreateProduct(product, doubleQuantity);\n\ncreateProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);\ncreateProduct({ name: 'Tomato', price: 10, quantity: 43 }, logTotalPrice);\n\nconsole.log('---Example 2---');\n\n// ## Example 2 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –î–æ–¥–∞–π—Ç–µ –≤ –æ–±'—î–∫—Ç `account` –º–µ—Ç–æ–¥–∏ `withdraw(amount, onSuccess, onError)` —Ç–∞\n// `deposit(amount, onSuccess, onError)`, –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞\n// –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.\n\n// –ú–µ—Ç–æ–¥ `withdraw` –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ\n// this.balance, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.\n\n// –ú–µ—Ç–æ–¥ `deposit` –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ –º–µ–Ω—à–µ\n// –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.\n\n// ```js\nconst TRANSACTION_LIMIT_FIRST = 1000;\n\nconst accountFirst = {\n  username: 'Jacob',\n  balance: 400,\n  withdraw(amount, onSuccess, onError) {\n    if (amount > TRANSACTION_LIMIT_FIRST || amount > this.balance) {\n      onError({\n        message: '—Å—Ç–∞–ª–∞—Å—å –±—ñ–¥–∞. –õ—ñ–º—ñ—Ç –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ –∞–±–æ –≥—Ä–æ—à–µ–π –Ω–µ–º–∞',\n        status: 'ERROR',\n      });\n    } else {\n      onSuccess({\n        status: 'OK',\n        message: '–û–ø–µ—Ä–∞—Ü—ñ—è withdraw —É—Å–ø—ñ—à–Ω–∞',\n      });\n    }\n  },\n  deposit(amount, onSuccess, onError) {\n    if (amount <= 0 || amount > TRANSACTION_LIMIT_FIRST) {\n      onError({\n        message:\n          'Deposit –Ω–µ –≤–¥–∞–≤—Å—è. –ë–æ —Å—É–º–∞ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—å. –ê–±–æ –ª—ñ–º—ñ—Ç –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ',\n        status: 'ERROR DEPOSIT',\n      });\n    } else {\n      onSuccess({\n        message: '–í—Å–µ –≥—É–¥',\n      });\n    }\n  },\n};\n\nfunction handleSuccess({ message, status = 'OK' }) {\n  console.log(`${status}: ${message}`);\n}\n\nfunction handleError({ message, status }) {\n  console.log(`${status}: ${message}`);\n}\n\naccountFirst.withdraw(2000, handleSuccess, handleError);\naccountFirst.withdraw(600, handleSuccess, handleError);\naccountFirst.withdraw(300, handleSuccess, handleError);\n// accountFirst.deposit(1700, handleSuccess, handleError);\n// accountFirst.deposit(0, handleSuccess, handleError);\n// accountFirst.deposit(-600, handleSuccess, handleError);\n// accountFirst.deposit(600, handleSuccess, handleError);\n// ```\n\nconsole.log('---Example 3---');\n\n// ## Example 3 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é `each(array, callback)`, —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î\n// –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.\n// –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏\n// –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.\n\n/**\n * 1. —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø—É—Å—Ç–∏–π —Ä–µ–∑—É–ª—å—Ç—É—é—á–∏–π –º–∞—Å–∏–≤\n * 2. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ü–∏–∫–ª –ø–æ –º–∞—Å–∏–≤—É.\n * 3. –í–∏–∫–ª–∏–∫–∞—Ç–∏ –∫–æ–ª–±–µ–∫ –Ω–∞ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó—ó —Ü–∏–∫–ª—É. –ü–µ—Ä–µ–¥–∞–≤—à–∏ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç\n * 4. –î–æ–¥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–ª–±–µ–∫—É –≤ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∏–π –º–∞—Å–∏–≤\n * 5. –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∏–π –º–∞—Å–∏–≤\n */\n\nfunction each(array, callback) {\n  const result = [];\n\n  for (let element of array) {\n    //1\n    // const el = callback(element);\n    // result.push(el)\n\n    //2\n    result.push(callback(element));\n  }\n\n  return result;\n}\n\n// ```js\n\nconst numbers = [64, 49, 36, 25, 16];\n\nconst newNumbers = each(numbers, function (value) {\n  return value * 2;\n});\n\nconsole.log(newNumbers);\n\n// console.log(\n//   each([64, 49, 36, 25, 16], function (value) {\n//     return value * 2;\n//   }),\n// );\n// console.log(\n//   each([64, 49, 36, 25, 16], function (value) {\n//     return value - 10;\n//   }),\n// );\n// console.log(\n//   each([64, 49, 36, 25, 16], function (value) {\n//     return Math.sqrt(value);\n//   }),\n// );\n// console.log(\n//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {\n//     return Math.ceil(value);\n//   }),\n// );\n// console.log(\n//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {\n//     return Math.floor(value);\n//   }),\n// );\n\n// const users = [{\n//   name: \"artem\",\n//   age: 30\n// }];\n\n// const res = each(users, function (user) {\n//   return {\n//     ...user,\n//     name: user.name.toUpperCase()\n//   }\n// });\n\n// console.log(res)\n\n// ```\n\nconsole.log('---Example 4---');\n\n// ## Example 4 - –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.\n\n// ```js\n\nconst fnName = arg => {\n  return 'a';\n};\n\n// const createProduct = (partialProduct, callback) => {\n//   const product = { id: Date.now(), ...partialProduct };\n//   callback(product);\n// }\n\n// function logProduct(product) {\n//   console.log(product);\n// }\n// =\n// const logProduct = product => console.log(product)\n\n// function logTotalPrice(product) {\n//   console.log(product.price * product.quantity);\n// }\n//=\n// const logTotalPrice = product => console.log(product.price * product.quantity)\n\n// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);\n// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);\n// ```\n\nconsole.log('---Example 5---');\n\n// ## Example 5 - –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.\n\n// ```js\nconst TRANSACTION_LIMIT = 1000;\n\nconst account = {\n  username: 'Jacob',\n  balance: 400,\n  withdraw(amount, onSuccess, onError) {\n    if (amount > TRANSACTION_LIMIT) {\n      onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`);\n    } else if (amount > this.balance) {\n      onError(`Amount can't exceed account balance of ${this.balance} credits`);\n    } else {\n      this.balance -= amount;\n      onSuccess(`Account balance: ${this.balance}`);\n    }\n  },\n  deposit(amount, onSuccess, onError) {\n    if (amount > TRANSACTION_LIMIT) {\n      onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`);\n    } else if (amount <= 0) {\n      onError(`Amount must be more than 0 credits`);\n    } else {\n      this.balance += amount;\n      onSuccess(`Account balance: ${this.balance}`);\n    }\n  },\n};\n\n// function handleSuccess(message) {\n//   console.log(`‚úÖ Success! ${message}`);\n// }\n// function handleError(message) {\n//   console.log(`‚ùå Error! ${message}`);\n// }\n\n// const handleSuccess = message => console.log(`‚úÖ Success! ${message}`);\n// const handleError = message => console.log(`‚ùå Error! ${message}`);\n\n// account.withdraw(2000, handleSuccess, handleError);\n// account.withdraw(600, handleSuccess, handleError);\n// account.withdraw(300, handleSuccess, handleError);\n// account.deposit(1700, handleSuccess, handleError);\n// account.deposit(0, handleSuccess, handleError);\n// account.deposit(-600, handleSuccess, handleError);\n// account.deposit(600, handleSuccess, handleError);\n// ```\n\nconsole.log('---Example 6---');\n\n// ## Example 6 - –Ü–Ω–ª–∞–π–Ω —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.\n\n// ```js\nfunction each(array, callback) {\n  const newArr = [];\n  for (const el of array) {\n    newArr.push(callback(el));\n  }\n  return newArr;\n}\n\n// console.log(\n//   each([64, 49, 36, 25, 16], value => value * 2),\n// );\n// console.log(\n//   each([64, 49, 36, 25, 16], value => value - 10),\n// );\n// console.log(\n//   each([64, 49, 36, 25, 16], function (value) {\n//     return Math.sqrt(value);\n//   }),\n// );\n// console.log(\n//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {\n//     return Math.ceil(value);\n//   }),\n// );\n// console.log(\n//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {\n//     return Math.floor(value);\n//   }),\n// );\n\n// const res = each(users, user => {\n//   return {\n//     ...user,\n//     name: user.name.toUpperCase()\n//   }\n// });\n//==\n// const users = [{\n//   name: \"artem\",\n//   age: 30\n// }];\n\n// console.log(each(users, user => ({\n//     ...user,\n//     name: user.name.toUpperCase()\n//   })\n// ))\n\n// ```\n\nconsole.log('---Example 7---');\n\n// ## Example 7 - –ú–µ—Ç–æ–¥ forEach\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É `forEach` —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.\n\n// ```js\nfunction logItems(items) {\n  console.log(items);\n\n  //1\n  // const fn = (item, index) => {\n  //   console.log(`${index + 1} - ${item}`);\n  // }\n  // items.forEach(fn)\n\n  //2\n  items.forEach(el => console.log(el));\n\n  // for (let i = 0; i < items.length; i += 1) {\n  //   console.log(`${i + 1} - ${items[i]}`);\n  // }\n}\n\n// logItems(['Mango', 'Poly', 'Ajax']);\n// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);\n// ```\n\nconsole.log('---Example 8---');\n\n// ## Example 8 - –ú–µ—Ç–æ–¥ forEach\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É `forEach` —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.\n\n// ```js\nfunction printContactsInfo({ names, phones }) {\n  const nameList = names.split(',');\n  const phoneList = phones.split(',');\n\n  nameList.forEach((name, i) => {\n    // console.log(`${name}: ${phoneList[i]}`);\n    console.log(`${nameList[i]}: ${phoneList[i]}`);\n  });\n\n  // for (let i = 0; i < nameList.length; i += 1) {\n  //   console.log(`${nameList[i]}: ${phoneList[i]}`);\n  // }\n}\n\n// [{\n//   name: \"user\",\n//   age: 123\n// }].forEach(({age}) => console.log(age))\n\n// printContactsInfo({\n//   names: 'Jacob,William,Solomon,Artemis',\n//   phones: '89001234567,89001112233,890055566377,890055566300',\n// });\n// ```\n\nconsole.log('---Example 9---');\n\n// ## Example 9 - –ú–µ—Ç–æ–¥ forEach\n\n// –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É `forEach` —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.\n\n// ```js\nfunction cal—ÅulateAverage(...args) {\n  let total = 0;\n\n  args.forEach(arg => (total += arg));\n\n  // for (let i = 0; i < args.length; i++) {\n  //   total += args[i];\n  // }\n\n  return total / args.length;\n}\n\nconsole.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5\nconsole.log(cal—ÅulateAverage(14, 8, 2)); // 8\nconsole.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2\n// ```\n\nconsole.log('------');\n\nfunction processCall(recipientOne) {\n  // –Ü–º—ñ—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º\n  const isRecipientAvailable = Math.random() > 0.5;\n  console.log(isRecipientAvailable);\n\n  if (!isRecipientAvailable) {\n    console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${recipientOne} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);\n    // –õ–æ–≥—ñ–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∞–≤—Ç–æ–≤—ñ–¥–ø–æ–≤—ñ–¥–∞—á–∞\n  } else {\n    console.log(`–ó'—î–¥–Ω—É—î–º–æ –∑ ${recipientOne}, –æ—á—ñ–∫—É–π—Ç–µ...`);\n    // –õ–æ–≥—ñ–∫–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –¥–∑–≤—ñ–Ω–∫–∞\n  }\n}\n\nprocessCall('–ú–∞–Ω–≥–æ');\n\nconsole.log('------');\n\n// function processCall(recipient, onAvailable, onNotAvailable) {\n//   // –Ü–º—ñ—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º\n//   const isRecipientAvailable = Math.random() > 0.5;\n\n//   if (!isRecipientAvailable) {\n//     onNotAvailable(recipient);\n//     return;\n//   }\n\n//   onAvailable(recipient);\n// }\n\n// function takeCall(name) {\n//   console.log(`–ó'—î–¥–Ω—É—î–º–æ –∑ ${name}, –æ—á—ñ–∫—É–π—Ç–µ...`);\n//   // –õ–æ–≥—ñ–∫–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –¥–∑–≤—ñ–Ω–∫–∞\n// }\n\n// function activateAnsweringMachine(name) {\n//   console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);\n//   // –õ–æ–≥—ñ–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∞–≤—Ç–æ–≤—ñ–¥–ø–æ–≤—ñ–¥–∞—á–∞\n// }\n\n// function leaveHoloMessage(name) {\n//   console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ø–∏—Å—É—î–º–æ –≥–æ–ª–æ–≥—Ä–∞–º—É.`);\n//   // –õ–æ–≥—ñ–∫–∞ –∑–∞–ø–∏—Å—É –≥–æ–ª–æ–≥—Ä–∞–º–∏\n// }\n\n// processCall('–ú–∞–Ω–≥–æ', takeCall, activateAnsweringMachine);\n// processCall('–ü–æ–ª—ñ', takeCall, leaveHoloMessage);\n\nconsole.log('------');\n// –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—è\nfunction greet(name) {\n  console.log(`–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ ${name}.`);\n}\n\n// –§—É–Ω–∫—Ü—ñ—è –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É\nfunction registerGuest(name, callback) {\n  console.log(`–†–µ—î—Å—Ç—Ä—É—î–º–æ –≥–æ—Å—Ç—è ${name}.`);\n  callback(name);\n}\n\nregisterGuest('–ú–∞–Ω–≥–æ', greet);\n"],"names":["_defineProperty","obj","key","value","logger","message","createProduct","callback","_objectSpread","id","Date","now","logProduct","product1","console","log","logTotalPrice","product2","price","quantity","doubleQuantity","param","product","name","TRANSACTION_LIMIT_FIRST","accountFirst","username","balance","withdraw","amount","onSuccess","onError","this","status","deposit","handleSuccess","_status","concat","handleError","each","array","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","push","err","return","numbers","newNumbers","fnName","arg","TRANSACTION_LIMIT","account","newArr","el","logItems","items","forEach","printContactsInfo","names","phones","nameList","split","phoneList","i","_len","arguments","length","args","Array","_key","total","processCall","recipientOne","isRecipientAvailable","Math","random","greet","registerGuest"],"version":3,"file":"07-module-4_iterative_methods_lesson-7.6f5fc408.js.map"}