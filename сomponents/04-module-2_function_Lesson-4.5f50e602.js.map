{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","src/js/04-module-2_function_Lesson-4.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","console.log('Lesson 4');\n// # Модуль 2. Заняття 4. Функції\n\n// ## Example 1 - Індекс маси тіла\n\n// Напиши функцію `calcBMI(weight, height)` яка розраховує та повертає\n// індекс маси тіла людини. Для цього необхідно розділити вагу в кілограмах на\n// квадрат висоти людини в метрах.\n\n// Вага та висота будуть спеціально передані як рядки. Не цілі числа можуть бути задані у вигляді\n// `24.7` або `24,7`, тобто як роздільник дробової частини\n// може бути кома.\n\n// Індекс маси тіла необхідно округлити до однієї цифри після коми;\n\n// ```js\n\n/**\n * 1. запитати користувача його зріст і вагу\n * 2. написати функцію, яка приймає два аругменти і повертає індекс маси тіла\n */\n\nconst calcBMI = function (w, h) {\n  const weight = Number(w.replace(',', '.'));\n  const height = Number(h.replace(',', '.'));\n\n  const heightPow = Math.pow(height, 2);\n\n  return weight / heightPow;\n};\n\n// const weight = prompt('введіть свою вагу в кілграмах');\n// const height = prompt('введіть свій зріст в метрах');\n\n// const bmi = calcBMI(weight, height);\n// console.log(bmi); // 28.8\n// ```\n\n// ## Example 2 - Найменше з чисел\n\n// Напиши функцію `min(a,b)`, яка повертає найменше з чисел `a` та `b`.\n\n// ```js\n\nconst min = function (a, b) {\n  return a > b ? b : a;\n};\n\nconsole.log(min(2, 5)); // 2\nconsole.log(min(3, -1)); // -1\nconsole.log(min(1, 1)); // 1\nconsole.log(min(4, 4)); // 1\n// ```\n\n// ## Example 3 - Площа прямокутника\n\n// Напиши функцію `getRectArea(dimensions)` для обчислення площі прямокутника\n// зі сторонами, значення яких будуть передані до параметра `dimensions` у вигляді\n// рядка. Значення гарантовано розділені пробілом.\n\n// ```js\n// console.log(\"square = \", getRectArea('8 11'));\n\nfunction getRectArea(dimensions) {\n  const sizesArr = dimensions.split(' ');\n\n  return sizesArr[0] * sizesArr[1];\n}\n\n// ```\n\n// ## Example 4 - Логування елементів\n\n// Напиши функцію `logItems(items)`, яка отримує масив та використовує цикл\n// `for`, який для кожного елемента масиву буде виводити в консоль повідомлення у\n// форматі `<номер елемента> - <значення елемента>`. Нумерація елементів повинна\n// починатися з `1`.\n\n// Наприклад для першого елемента масиву `['Mango', 'Poly', 'Ajax']` з індексом `0`\n// буде виведено `1 - Mango`, а для індексу 2 виведе `3 - Ajax`.\n\n// ```js\nfunction logItems(items) {\n  // for (let i = 0; i < items.length; i += 1) {\n  //   console.log(`${i + 1} - ${items[i]}`)\n  // }\n\n  for (let item of items) {\n    const i = items.indexOf(item);\n    console.log(`${i + 1} - ${item}`);\n  }\n}\n\n// logItems(['Mango', 'Poly', 'Ajax']);\n// logItems(['asdas', 'asdasd', 'dkjghk']);\n// logItems(['Mango', 'Poly', 'Ajax']);\n// logItems(['🍎', '🍇', '🍑', '🍌', '🍋']);\n// ```\n\n// ## Example 5 - Логування контактів\n\n// Напиши функцію `printContactsInfo(names, phones)` яка виводить у консоль ім'я\n// та телефонний номер користувача. У параметри `names` та `phones` будуть передані\n// рядки імен та телефонних номерів, розділені комами. Порядковий номер імен та\n// телефонів у рядках вказують на відповідність. Кількість імен та телефонів\n// гарантовано однакова.\n\n// ```js\nfunction printContactsInfo(names, phones) {\n  const namesArray = names.split(',');\n  const phonesArray = phones.split(',');\n\n  const result = [];\n  // 1\n  for (let i = 0; i < namesArray.length; i += 1) {\n    result.push(`${namesArray[i]} - ${phonesArray[i]}`);\n  }\n\n  // // 2\n  // for (let item of namesArray) {\n  //   const i = namesArray.indexOf(item);\n  //   console.log(`${namesArray[i]} - ${phonesArray[i]}`)\n  // }\n\n  return result.sort();\n}\n\n// printContactsInfo(\n//   'Jacob,William,Solomon,Artemis',\n//   '89001234567,89001112233,890055566377,890055566300',\n// );\n\n// const array = printContactsInfo(\n//   'Artem,Ivan,Petro,Semen',\n//   '89001112233,890055566377,890055566300',\n// );\n\n// console.log(array.join(' || '))\n// ```\n\n// ## Example 6 - Пошук найбільшого елемента\n\n// Напиши функцію `findLargestNumber(numbers)`яка шукає найбільше число в\n// масиві.\n\n// ```js\nfunction findLargestNumber(numbers) {\n  //1\n  return Math.max(...numbers);\n\n  //2\n  // let max = numbers[0];\n  // for (let element of numbers) {\n  //   if (element > max) {\n  //     max = element\n  //   }\n  // }\n\n  // return max\n}\n\nconsole.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94\nconsole.log(findLargestNumber([49, 4, 7, 83, 12])); // 83\n// ```\n\n// ## Example 7 - Середнє значення\n\n// Напишіть функцію `calAverage()` яка приймає довільну кількість аргументів\n// і повертає їхнє середнє значення. Усі аргументи будуть лише числами.\n\n// ```js\nfunction calcAverage(...numbers) {\n  // console.log(numbers)\n\n  // console.log(\"Total arguments = \", arguments.length);\n\n  let sum = 0;\n  for (let arg of numbers) {\n    sum += arg;\n  }\n\n  // return sum / arguments.length\n}\n\n// console.log(calcAverage(1, 2, 3, 4, 45, 12, 67)); // 2.5\n// console.log(calAverage(14, 8, 2)); // 8\n// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2\n// ```\n\n// ## Example 8 - Форматування часу\n\n// Напиши функцію `formatTime(minutes)` яка переведе значення `minutes`\n// (кількість хвилин) у рядок у форматі годин та хвилин `HH:MM`.\n\n// ```js\n// const hours = Math.floor(totalMinutes / 60);\n// const minutes = totalMinutes % 60;\n// console.log(hours);\n// console.log(minutes);\n\n// const doubleDigitHours = String(hours).padStart(2, 0);\n// const doubleDigitMinutes = String(minutes).padStart(2, 0);\n// console.log(`${doubleDigitHours}:${doubleDigitMinutes}`);\n\nfunction formatTime(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n\n  const formatedHours = String(hours).padStart(2, '0');\n  const formatedMinutes = String(mins).padStart(2, '0');\n\n  return `${formatedHours}:${formatedMinutes}`;\n}\n\nconst a = formatTime(1440);\nconsole.log(a); // \"01:10\"\n// console.log(formatTime(450)); // \"07:30\"\n// console.log(formatTime(1441)); // \"24:01\"\n// ```\n\n// ## Example 9 - Колекція курсів (includes, indexOf, push і т. д.)\n\n// Напишіть функції для роботи з колекцією навчальних курсів `courses`:\n\n// - `addCourse(name)` - додає курс до кінця колекції\n// - `removeCourse(name)` - видаляє курс із колекції\n// - `updateCourse(oldName, newName)` - змінює ім'я на нове\n\n// ```js\nconst courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];\n\nconst lastCourseIndex = courses.length - 1;\nconst lastCourse = courses[lastCourseIndex];\n\nfunction A(array) {\n  console.log(array);\n}\n\nA([1, 2, 3, 4]);\n\nfunction addCourse(name) {\n  // if (courses.includes(name)) {\n  //   return 'Ви вже маєте такий курс'\n  // }\n\n  if (courses.indexOf(name) > -1) {\n    return 'Ви вже маєте такий курс';\n  }\n\n  courses.push(name);\n  return 'Курс додано';\n}\n\nfunction deleteCourse(name = 'deafult value') {\n  /**\n   * 1. Знайти індекс елемента. indexOF\n   * 2. Видаляємо елемент по індексу. splice\n   */\n\n  const index = courses.indexOf(name);\n  if (index === -1) {\n    return 'Такого курса нема';\n  }\n\n  const result = `Курс ${courses[index]} видалено`;\n  courses.splice(index, 1);\n\n  return result;\n}\n\nfunction updateCourse(oldName, newName) {\n  const index = courses.indexOf(oldName);\n  if (index === -1) {\n    return 'Такого курса нема';\n  }\n\n  const result = `Курс ${oldName} оновлено на курс ${newName}`;\n  courses.splice(index, 1, newName);\n\n  return result;\n}\nconst arr = [8, 9, 10];\narr.sort();\nconsole.log();\n\nlet res = addCourse('Express');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']\n\nres = addCourse('Express');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']\n// addCourse('CSS'); // 'Ви вже маєте такий курс'\n\nres = deleteCourse();\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']\n// removeCourse('Vue'); // 'Курс із таким ім'ям не знайдено'\n\nres = updateCourse('Expressss', 'NestJS');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']\n// ```\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","len","length","i","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","console","log","$b3f8495c2ca7d717$var$min","a1","b","$b3f8495c2ca7d717$var$findLargestNumber","numbers","_Math","Math","max","apply","$parcel$interopDefault","minutes","hours","mins","formatedHours","formatedMinutes","$b3f8495c2ca7d717$var$a","floor","String","padStart","concat","array","$b3f8495c2ca7d717$var$courses","$b3f8495c2ca7d717$var$lastCourseIndex","$b3f8495c2ca7d717$var$addCourse","indexOf","push","sort","$b3f8495c2ca7d717$var$res","arguments","index","result","splice","$b3f8495c2ca7d717$var$deleteCourse","oldName","newName","$b3f8495c2ca7d717$var$updateCourse"],"version":3,"file":"04-module-2_function_Lesson-4.5f50e602.js.map"}