{"mappings":"AAAAA,QAAQC,IAAI,YAsCZD,QAAQC,IAAI,SAQZ,MAAMC,EAAM,SAAUC,EAAGC,GAEvB,OAAOD,EAAIC,EAAIA,EAAID,C,EAmHrB,SAASE,EAAkBC,GAEzB,OAAOC,KAAKC,OAAOF,E,CA5GrBN,QAAQC,IAAIC,EAAI,EAAG,IACnBF,QAAQC,IAAIC,EAAI,GAAG,IACnBF,QAAQC,IAAIC,EAAI,EAAG,IACnBF,QAAQC,IAAIC,EAAI,EAAG,IAGnBF,QAAQC,IAAI,SASZD,QAAQC,IAAI,YAEZ,SAAqBQ,GACnB,MAAMC,EAAWD,EAAWE,MAAM,KAElC,OAAOD,EAAS,GAAKA,EAAS,E,CALPE,CAAY,SAUrCZ,QAAQC,IAAI,SAaZ,SAAkBY,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,GAAK,EACrCd,QAAQC,IAAI,GAAGa,EAAI,OAAOD,EAAMC,MAGlC,IAAK,IAAIE,KAAQH,EAAO,CACtB,MAAMC,EAAID,EAAMI,QAAQD,GACxBhB,QAAQC,IAAI,GAAGa,EAAI,OAAOE,I,EAO9BE,CAAS,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,OAG1ClB,QAAQC,IAAI,SA2CZD,QAAQC,IAAI,SAuBZD,QAAQC,IAAII,EAAkB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,MACjDL,QAAQC,IAAII,EAAkB,CAAC,GAAI,EAAG,EAAG,GAAI,MAG7CL,QAAQC,IAAI,SA0BZD,QAAQC,IAAI,SA2BZ,MAAMkB,EAVN,SAAoBC,GAClB,MAAMC,EAAQd,KAAKe,MAAMF,EAAU,IAC7BG,EAAOH,EAAU,GAKvB,MAAO,GAHeI,OAAOH,GAAOI,SAAS,EAAG,QACxBD,OAAOD,GAAME,SAAS,EAAG,M,CAKzCC,CAAW,MACrB1B,QAAQC,IAAIkB,GAKZnB,QAAQC,IAAI,iBAWZ,MAAM0B,EAAU,CAAC,OAAQ,MAAO,aAAc,QAAS,cAEjDC,EAAkBD,EAAQZ,OAAS,EACnCc,EAAaF,EAAQC,GAI3B,SAASE,EAAUC,GAKjB,OAAIJ,EAAQV,QAAQc,IAAQ,EACnB,2BAGUJ,EAAXK,KAAKD,GACN,c,CAbT/B,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAI4B,GA4CZ,IAAII,EAAMH,EAAU,WACpB9B,QAAQC,IAAI0B,EAASM,GAErBA,EAAMH,EAAU,WAChB9B,QAAQC,IAAI0B,EAASM,GAGFA,EApCnB,SAAsBF,EAAO,iBAM3B,MAAMG,EAAQP,EAAQV,QAAQc,GAC9B,IAAc,IAAVG,EACF,MAAO,oBAGM,MAATC,EAAS,QAACR,EAAWO,cAG3B,OAFYP,EAAJS,OAAOF,EAAO,GAEfC,C,CAsBHE,GACNrC,QAAQC,IAAI0B,EAASM,GAGrBA,EAvBA,SAAsBK,EAASC,GAC7B,MAAML,EAAQP,EAAQV,QAAQqB,GAC9B,IAAc,IAAVJ,EACF,MAAO,oBAGM,MAATC,EAAS,QAACG,sBAAmBC,IAGnC,OAFkBZ,EAAVS,OAAOF,EAAO,EAAGK,GAElBJ,C,CAcHK,CAAa,UAAW,UAC9BxC,QAAQC,IAAI0B,EAASM,GAGrBjC,QAAQC,IAAI,SAcZwC,QAAU,4BACVC,aAAe,EAEf,MAAMC,EAfN,SAAiCF,EAASC,GAExC,IAAIE,EACAC,EAAYJ,EAAQ9B,MAAM,KAK9B,OAJAX,QAAQC,IAAI4C,GAEZD,EAAWC,EAAU9B,OAAS2B,EAEvBE,C,CAOUE,CAHT,4BACK,GAGf9C,QAAQC,IAAI,gBAAgB0C","sources":["src/js/04-module-2_function_Lesson-4.js"],"sourcesContent":["console.log('Lesson 4');\n// # –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç—Ç—è 4. –§—É–Ω–∫—Ü—ñ—ó\n\n// ## Example 1 - –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `calcBMI(weight, height)` —è–∫–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î\n// —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –ª—é–¥–∏–Ω–∏. –î–ª—è —Ü—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞\n// –∫–≤–∞–¥—Ä–∞—Ç –≤–∏—Å–æ—Ç–∏ –ª—é–¥–∏–Ω–∏ –≤ –º–µ—Ç—Ä–∞—Ö.\n\n// –í–∞–≥–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –±—É–¥—É—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ñ —è–∫ —Ä—è–¥–∫–∏. –ù–µ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ\n// `24.7` –∞–±–æ `24,7`, —Ç–æ–±—Ç–æ —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –¥—Ä–æ–±–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏\n// –º–æ–∂–µ –±—É—Ç–∏ –∫–æ–º–∞.\n\n// –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏;\n\n// ```js\n\n/**\n * 1. –∑–∞–ø–∏—Ç–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –π–æ–≥–æ –∑—Ä—ñ—Å—Ç —ñ –≤–∞–≥—É\n * 2. –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä—É–≥–º–µ–Ω—Ç–∏ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞\n */\n\nconst calcBMI = function (w, h) {\n  const weight = Number(w.replace(',', '.'));\n  const height = Number(h.replace(',', '.'));\n\n  const heightPow = Math.pow(height, 2);\n\n  return (weight / heightPow).toFixed(1);\n};\n\n// const weight = prompt('–≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é –≤–∞–≥—É –≤ –∫—ñ–ª–≥—Ä–∞–º–∞—Ö');\n// const height = prompt('–≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∑—Ä—ñ—Å—Ç –≤ –º–µ—Ç—Ä–∞—Ö');\n\n// const bmi = calcBMI(weight, height);\n// console.log(bmi); // 28.8\n// ```\n\nconsole.log('-----');\n\n// ## Example 2 - –ù–∞–π–º–µ–Ω—à–µ –∑ —á–∏—Å–µ–ª\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `min(a,b)`, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–º–µ–Ω—à–µ –∑ —á–∏—Å–µ–ª `a` —Ç–∞ `b`.\n\n// ```js\n\nconst min = function (a, b) {\n  //1\n  return a > b ? b : a;\n\n  //2\n  if (a > b) {\n    return b;\n  }\n  return a;\n};\n\nconsole.log(min(2, 5)); // 2\nconsole.log(min(3, -1)); // -1\nconsole.log(min(1, 1)); // 1\nconsole.log(min(4, 4)); // 1\n// ```\n\nconsole.log('-----');\n\n// ## Example 3 - –ü–ª–æ—â–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `getRectArea(dimensions)` –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞\n// –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `dimensions` —É –≤–∏–≥–ª—è–¥—ñ\n// —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.\n\n// ```js\nconsole.log('square = ', getRectArea('8 11'));\n\nfunction getRectArea(dimensions) {\n  const sizesArr = dimensions.split(' ');\n\n  return sizesArr[0] * sizesArr[1];\n}\n\n// ```\n\nconsole.log('-----');\n\n// ## Example 4 - –õ–æ–≥—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `logItems(items)`, —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª\n// `for`, —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É\n// —Ñ–æ—Ä–º–∞—Ç—ñ `<–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>`. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞\n// –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ `1`.\n\n// –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É `['Mango', 'Poly', 'Ajax']` –∑ —ñ–Ω–¥–µ–∫—Å–æ–º `0`\n// –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ `1 - Mango`, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ `3 - Ajax`.\n\n// ```js\nfunction logItems(items) {\n  for (let i = 0; i < items.length; i += 1) {\n    console.log(`${i + 1} - ${items[i]}`);\n  }\n\n  for (let item of items) {\n    const i = items.indexOf(item);\n    console.log(`${i + 1} - ${item}`);\n  }\n}\n\n// logItems(['Mango', 'Poly', 'Ajax']);\n// logItems(['asdas', 'asdasd', 'dkjghk']);\n// logItems(['Mango', 'Poly', 'Ajax']);\nlogItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);\n// ```\n\nconsole.log('-----');\n\n// ## Example 5 - –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `printContactsInfo(names, phones)` —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è\n// —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ `names` —Ç–∞ `phones` –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ\n// —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞\n// —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤\n// –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.\n\n// ```js\nfunction printContactsInfo(names, phones) {\n  const namesArray = names.split(',');\n  const phonesArray = phones.split(',');\n\n  const result = [];\n  // 1\n  for (let i = 0; i < namesArray.length; i += 1) {\n    result.push(`${namesArray[i]} - ${phonesArray[i]}`);\n  }\n\n  // // 2\n  // for (let item of namesArray) {\n  //   const i = namesArray.indexOf(item);\n  //   console.log(`${namesArray[i]} - ${phonesArray[i]}`)\n  // }\n\n  return result.sort();\n}\n\n// printContactsInfo(\n//   'Jacob,William,Solomon,Artemis',\n//   '89001234567,89001112233,890055566377,890055566300',\n// );\n\n// const array = printContactsInfo(\n//   'Artem,Ivan,Petro,Semen',\n//   '89001112233,890055566377,890055566300',\n// );\n\n// console.log(array.join(' || '))\n// ```\n\nconsole.log('-----');\n\n// ## Example 6 - –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `findLargestNumber(numbers)`—è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –≤\n// –º–∞—Å–∏–≤—ñ.\n\n// ```js\nfunction findLargestNumber(numbers) {\n  //1\n  return Math.max(...numbers);\n\n  //2\n  // let max = numbers[0];\n  // for (let element of numbers) {\n  //   if (element > max) {\n  //     max = element\n  //   }\n  // }\n\n  // return max\n}\n\nconsole.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94\nconsole.log(findLargestNumber([49, 4, 7, 83, 12])); // 83\n// ```\n\nconsole.log('-----');\n\n// ## Example 7 - –°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è\n\n// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é `calAverage()` —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤\n// —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.\n\n// ```js\nfunction calcAverage(...numbers) {\n  console.log(numbers);\n\n  console.log('Total arguments = ', arguments.length);\n\n  let sum = 0;\n  for (let arg of numbers) {\n    sum += arg;\n  }\n\n  return sum / arguments.length;\n}\n\n// console.log(calcAverage(1, 2, 3, 4, 45, 12, 67)); // 2.5\n// console.log(calAverage(14, 8, 2)); // 8\n// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2\n// ```\n\nconsole.log('-----');\n\n// ## Example 8 - –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É\n\n// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `formatTime(minutes)` —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è `minutes`\n// (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω `HH:MM`.\n\n// ```js\n// const hours = Math.floor(totalMinutes / 60);\n// const minutes = totalMinutes % 60;\n// console.log(hours);\n// console.log(minutes);\n\n// const doubleDigitHours = String(hours).padStart(2, 0);\n// const doubleDigitMinutes = String(minutes).padStart(2, 0);\n// console.log(`${doubleDigitHours}:${doubleDigitMinutes}`);\n\nfunction formatTime(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n\n  const formatedHours = String(hours).padStart(2, '0');\n  const formatedMinutes = String(mins).padStart(2, '0');\n\n  return `${formatedHours}:${formatedMinutes}`;\n}\n\nconst a = formatTime(1440);\nconsole.log(a); // \"01:10\"\n// console.log(formatTime(450)); // \"07:30\"\n// console.log(formatTime(1441)); // \"24:01\"\n// ```\n\nconsole.log('--Example 9--');\n\n// ## Example 9 - –ö–æ–ª–µ–∫—Ü—ñ—è –∫—É—Ä—Å—ñ–≤ (includes, indexOf, push —ñ —Ç. –¥.)\n\n// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ `courses`:\n\n// - `addCourse(name)` - –¥–æ–¥–∞—î –∫—É—Ä—Å –¥–æ –∫—ñ–Ω—Ü—è –∫–æ–ª–µ–∫—Ü—ñ—ó\n// - `removeCourse(name)` - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—ó\n// - `updateCourse(oldName, newName)` - –∑–º—ñ–Ω—é—î —ñ–º'—è –Ω–∞ –Ω–æ–≤–µ\n\n// ```js\nconst courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];\n\nconst lastCourseIndex = courses.length - 1;\nconst lastCourse = courses[lastCourseIndex];\nconsole.log(lastCourseIndex);\nconsole.log(lastCourse);\n\nfunction addCourse(name) {\n  // if (courses.includes(name)) {\n  //   return '–í–∏ –≤–∂–µ –º–∞—î—Ç–µ —Ç–∞–∫–∏–π –∫—É—Ä—Å'\n  // }\n\n  if (courses.indexOf(name) > -1) {\n    return '–í–∏ –≤–∂–µ –º–∞—î—Ç–µ —Ç–∞–∫–∏–π –∫—É—Ä—Å';\n  }\n\n  courses.push(name);\n  return '–ö—É—Ä—Å –¥–æ–¥–∞–Ω–æ';\n}\n\nfunction deleteCourse(name = 'deafult value') {\n  /**\n   * 1. –ó–Ω–∞–π—Ç–∏ —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞. indexOF\n   * 2. –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø–æ —ñ–Ω–¥–µ–∫—Å—É. splice\n   */\n\n  const index = courses.indexOf(name);\n  if (index === -1) {\n    return '–¢–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ–º–∞';\n  }\n\n  const result = `–ö—É—Ä—Å ${courses[index]} –≤–∏–¥–∞–ª–µ–Ω–æ`;\n  courses.splice(index, 1);\n\n  return result;\n}\n\nfunction updateCourse(oldName, newName) {\n  const index = courses.indexOf(oldName);\n  if (index === -1) {\n    return '–¢–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ–º–∞';\n  }\n\n  const result = `–ö—É—Ä—Å ${oldName} –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –∫—É—Ä—Å ${newName}`;\n  courses.splice(index, 1, newName);\n\n  return result;\n}\n\nlet res = addCourse('Express');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']\n\nres = addCourse('Express');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']\n// addCourse('CSS'); // '–í–∏ –≤–∂–µ –º–∞—î—Ç–µ —Ç–∞–∫–∏–π –∫—É—Ä—Å'\n\nres = deleteCourse();\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']\n// removeCourse('Vue'); // '–ö—É—Ä—Å —ñ–∑ —Ç–∞–∫–∏–º —ñ–º'—è–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'\n\nres = updateCourse('Express', 'NestJS');\nconsole.log(courses, res); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']\n// ```\n\nconsole.log('-----');\n\nfunction calculateEngravingPrice(message, pricePerWord) {\n  // Change code below this line\n  let sumPrice;\n  let wordArray = message.split(' ');\n  console.log(wordArray);\n\n  sumPrice = wordArray.length * pricePerWord;\n\n  return sumPrice;\n  // Change code above this line\n}\n\nmessage = 'JavaScript is in my blood';\npricePerWord = 2;\n\nconst totalPrice = calculateEngravingPrice(message, pricePerWord);\nconsole.log(`Total price: ${totalPrice}`);\n\nfunction calculateTotalPrice(order) {\n  let total = 0;\n  // Change code below this line\n  for (let i = 0; i < order.length; i++) {\n    total += order[i];\n  }\n  // Change code above this line\n  return total;\n}\n"],"names":["console","log","$79d9e9aa90c842ea$var$min","a1","b","$79d9e9aa90c842ea$var$findLargestNumber","numbers","Math","max","dimensions","sizesArr","split","$79d9e9aa90c842ea$var$getRectArea","items","i","length","item","indexOf","$79d9e9aa90c842ea$var$logItems","$79d9e9aa90c842ea$var$a","minutes","hours","floor","mins","String","padStart","$79d9e9aa90c842ea$var$formatTime","$79d9e9aa90c842ea$var$courses","$79d9e9aa90c842ea$var$lastCourseIndex","$79d9e9aa90c842ea$var$lastCourse","$79d9e9aa90c842ea$var$addCourse","name","push","$79d9e9aa90c842ea$var$res","index","result","splice","$79d9e9aa90c842ea$var$deleteCourse","oldName","newName","$79d9e9aa90c842ea$var$updateCourse","message","pricePerWord","$79d9e9aa90c842ea$var$totalPrice","sumPrice","wordArray","$79d9e9aa90c842ea$var$calculateEngravingPrice"],"version":3,"file":"04-module-2_function_Lesson-4.711420e5.js.map"}