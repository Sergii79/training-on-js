{"mappings":"AAAAA,QAAQC,IAAI,YASSD,QAAbC,IAAI,SAQZD,QAAQC,IADcC,KAItBF,QAAQC,IADWE,KAInBH,QAAQC,IAAI,SAOZ,IAAIG,EAAW,IAEfA,GAAY,GAEZJ,QAAQC,IAFRG,KAKAJ,QAAQC,IAAI,SASZD,QAAQC,IADO,KAIfD,QAAQC,IAAI,SASZ,MACMI,EAAUC,KAAKC,MADP,MAERC,EAAcF,KAAKG,MAFX,MAGRC,EAAYJ,KAAKK,KAHT,MAKdX,QAAQC,IAAI,aAAcI,GAC1BL,QAAQC,IAAI,mBAAoBO,GAChCR,QAAQC,IAAI,iBAAkBS,GAG9BV,QAAQC,IAAI,SAaZD,QAAQC,IADQ,2CAIhBD,QAAQC,IAAI,SAiCZ,MAAMW,EAAYC,OAHL,OAGmBC,QAAQ,IAAK,KAAKC,QAC5CC,EAAYH,OAHL,OAGmBC,QAAQ,IAAK,KAAKC,QAK/Bf,QAAXC,IAAI,eAAgBe,GAC5BhB,QAAQC,IAAI,eAAgBW,GAE5B,MAAMK,EAAYX,KAAKY,IAAIF,EAAW,GACtChB,QAAQC,IAAIgB,GAEZ,MACME,EAAaN,QADPD,EAAYK,GACMG,QAAQ,IAEtCpB,QAAQC,IAAIkB,GAGZnB,QAAQC,IAAI,SAMZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GAC4CD,QAAhDC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZ,MAAMoB,EAAI,SAASC,WAAW,GACxBC,EAAI,SAASD,WAAW,GAC9BtB,QAAQC,IAAIoB,EAAGE,GAEfvB,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GAGZD,QAAQC,IAAI,SAOiED,QAArEC,IAAY,GACpBD,QAAQC,KAAI,GACZD,QAAQC,IAAS,MACjBD,QAAQC,IAAY,GAKpBD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,KAAI,GACZD,QAAQC,IAAY,GAEpBD,QAAQC,KAAI,GAUZD,QAAQC,IAAS,GACjBD,QAAQC,IAAkB,GAe1BD,QAAQC,IAAI,SAeZD,QAAQC,IAHa,IAgBrB,MAEMuB,EAAQlB,KAAKG,MAFE,KAEmB,IAGlCgB,EAAe,GAAGC,OAAOF,GAAOG,SAAS,EAAG,SAClD3B,QAAQC,IAAIwB,GAWZzB,QAAQC,IADO,MACI0B,SAAS,EAAG","sources":["src/js/01-module_1-cycles.js"],"sourcesContent":["console.log('Lesson 1');\n\n// # Модуль 1. Заняття 1. Змінні, типи та оператори\n\n// ## Example 1 - Математичні оператори\n\n// Виведи на екран загальну кількість всіх яблук.\n// кількість хороших яблук.\n\nconsole.log('-----');\n\n// ```js\nconst apples = 470;\nconst badApples = 135;\nconst halfApples = 67;\n\nconst harmfulApples = badApples + halfApples;\nconsole.log(harmfulApples);\n\nconst goodApples = apples - harmfulApples;\nconsole.log(goodApples);\n// ```\n\nconsole.log('-----');\n\n// ## Example 2 - Комбіновані оператори\n\n// Заміни вираз перевизначення комбінованим оператором `+=`.\n\n// ```js\nlet students = 100;\n// students = students + 50;\nstudents += 50;\n\nconsole.log(students);\n// ```\n\nconsole.log('-----');\n\n// ## Example 3 - Пріоритет операторів\n\n// Розбери пріоритет операторів в інструкції привласнення значення змінної\n// `result`.\n\n// ```js\nconst result = 108 + 223 - 2 * 5;\nconsole.log(result);\n// ```\n\nconsole.log('-----');\n\n// ## Example 4 - Клас Math\n\n// Напиши скрипт, який виводить у консоль заокруглені вгору/вниз і т.д. значення\n// змінної `value`. Використовуй методи `Math.floor()`, `Math.ceil()` та\n// `Math.round()`. Перевір що буде в консолі при значеннях `27.3` та `27.9`.\n\n// ```js\nconst value = 27.7;\nconst rounded = Math.round(value);\nconst roundedDown = Math.floor(value);\nconst roundedUp = Math.ceil(value);\n\nconsole.log('Math.round', rounded);\nconsole.log('Math.roundedDown', roundedDown);\nconsole.log('Math.roundedUp', roundedUp);\n// ```\n\nconsole.log('-----');\n\n// ## Example 5 - Шаблонні рядки\n\n// Склади фразу за допомогою шаблонних рядків `A has B bots in stock`, де A, B -\n// змінні вставлені в рядок.\n\n// ```js\nconst companyName = 'Cyberdyne Systems';\nconst repairBots = 150;\nconst defenceBots = 50;\nconst totalBots = repairBots + defenceBots;\nconst message = `${companyName} has ${totalBots} bots in stock`;\nconsole.log(message); // \"Cyberdyne Systems has 200 bots in stock\"\n// ```\n\nconsole.log('-----');\n\n// ## Example 6 - Методи рядків та чейнінг\n\n// Напиши скрипт, який розраховує індекс маси тіла людини. Для цього\n// необхідно розділити вагу в кілограмах на квадрат висоти людини у метрах.\n\n// Вага та висота зберігаються у змінних `weight` та `height`, але не як числа, а в\n// вигляді рядків (спеціально для завдання). Не цілі числа можуть бути задані у вигляді\n// `24.7` або `24,7`, тобто як роздільник дробової частини може бути\n// кома.\n\n// Індекс маси тіла необхідно округлити до однієї цифри після коми;\n\n/**\n * 1. Знайти квадрат зросту людини //Math.pow()\n * 2. Розділити вагу на квадрат зросту. // звичайне ділення\n * 3. Округлити фінальний результат\n *\n * Зробили:\n * 1. Запитали користувача ввести значення ваги і зросту\n * 2. Замінили можливу кому на крапку\n * 3. Явно конвертували рядок в число\n * 4. Знайшли квадрат зросту\n * 5. Знайшли індекс маси тіла\n * 6. Форматували індекс маси тіла до одніє цифри після крапки\n * 7. Привели значення індексу маси тіла до числового типу\n */\n// ```js\n\nlet weight = '88,3';\nlet height = '1.75';\n\nconst weightInt = Number(weight.replace(',', '.').trim());\nconst heightInt = Number(height.replace(',', '.').trim());\n\n// const weightInt = Number(prompt('Введіть вагу в кілограмах').replace(',', '.'));\n// const heightInt = Number(prompt('Введіть зріст в метрах').replace(',', '.'));\n\nconsole.log('heightInt = ', heightInt);\nconsole.log('weightInt = ', weightInt);\n\nconst heightPow = Math.pow(heightInt, 2);\nconsole.log(heightPow);\n\nconst bmi = weightInt / heightPow;\nconst roundedBmi = Number(bmi.toFixed(1));\n\nconsole.log(roundedBmi); // 28.8\n// ```\n\nconsole.log('-----');\n\n// ## Example 7 - Оператори порівняння та приведення типів\n\n// Яким буде результат виразів?\n// console.log('\\n==============');\nconsole.log(5 > 4); // true\nconsole.log(10 >= '7'); // true.\nconsole.log('2' > '12'); // true. String порівнюються посимвольно по коду символа. Як отримати код символа https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\nconsole.log('2' < '12'); // false\nconsole.log('4' == 4); // true\nconsole.log('6' === 6); // false.\nconsole.log('false' === false); // false\nconsole.log(1 == true); // true.\nconsole.log(1 === true); // false.\nconsole.log('0' == false); //true.\nconsole.log('0' === false); // false.\nconsole.log('Papaya' < 'papaya'); // true.\nconst a = 'Papaya'.charCodeAt(0);\nconst b = 'papaya'.charCodeAt(0);\nconsole.log(a, b);\n\nconsole.log('Papaya' === 'papaya'); // false.\nconsole.log(undefined == null); // true.\nconsole.log(undefined === null); // false.\n// ```\n\nconsole.log('-----');\n\n// ## Example 8 - Логічні оператори\n\n// Яким буде результат виразів?\n// && - Оператор приводить всі операнди до типу Boolean, і повертає перший який дасть false. Або останній, якщо false нема\n// || - Оператор приводить всі операнди до типу Boolean, і повертає перший який дасть true. Або останній, якщо true нема\nconsole.log(true && 3); // 3\nconsole.log(false && 3); // false\nconsole.log(1 && null && 2); // null\nconsole.log(true && 0 && 'kiwi'); // 0\n// true //true\n// 0 // false\n// 'kiwi' // true\n\nconsole.log(true || 3); // true\nconsole.log(true || 3 || 4); // true\nconsole.log(true || false || 7); // true\nconsole.log(null || 2 || undefined); // 2\n\nconsole.log((1 && null && 2) > 0); // false\n// 1 // true\n// null // false\n// 2 // true\n// null > 0\n/**\n * 1. Виконується оператор в дужках (1 && null && 2) = null\n * 2. Виконуються порівняння null > 0\n */\n\nconsole.log(2 && 3); // 3\nconsole.log(null || (2 && 3) || 4); // 3\n// 2 //true\n// 3 //true\n// 2 && 3 = 3\n\n// null //false\n// 3 // true\n// 4 // true\n/**\n * 1. Виконується оператор в дужках (2 && 3) = 3\n * 2. Виконується опеартор null || 3 || 4 = 3\n */\n\n// ```\n\nconsole.log('-----');\n\n// ## Example 9 - Значення за замовчуванням та оператор нульового злиття\n\n// Отрефактори код так, щоб у змінну `value` присвоювалося значення\n// змінної `incomingValue`, якщо воно не рівне `undefined` або `null`. В\n// іншому випадку має присвоюватися значення `defaultValue`. Перевір роботу\n// скрипта для наступних значень змінної `incomingValue`: null, undefined, 0,\n// false. Використовуй оператор `??` (nullish coalescing operator).\n\n// ```js\nconst incomingValue = null;\nconst defaultValue = 10;\nconst value1 = incomingValue ?? defaultValue;\n\nconsole.log(value1);\n// ```\n\n// ## Example 10 - Оператор % та методи рядків\n\n// Напиши скрипт, який переведе значення `totalMinutes` (кількість хвилин) в\n// рядок у форматі годин та хвилин `HH:MM`.\n\n// - 70 покаже 01:10\n// - 450 покаже 07:30\n// - 1441 покаже 24:01\n\n// ```js\nconst totalMinutes = 1441;\n\nconst hours = Math.floor(totalMinutes / 60);\nconst minutes = totalMinutes % 60;\n\nconst formatedTime = `${String(hours).padStart(2, '0')}:${minutes}`;\nconsole.log(formatedTime);\n\n// const hoursString = hours + '';\n// const formatedTime = `${hoursString.padStart(2, '0')}:${minutes}`;\n// console.log(formatedTime);\n\n// const hoursString = String(hours).padStart(2, '0');\n// const formatedTime = `${hoursString}:${minutes}`;\n// console.log(formatedTime);\n\nconst string = 'abc';\nconsole.log(string.padStart(4, '5'));\n\n// ```\n\n// let clientCounter = 18;\n// const maxClients = 25;\n\n// while (clientCounter < maxClients) {\n//   console.log(clientCounter);\n//   clientCounter += 1;\n// }\n\n// let clientCounter = 18;\n// const maxClients = 25;\n\n// while (clientCounter < maxClients) {\n//     clientCounter += 1;\n//     console.log(clientCounter);\n// }\n\n// while (clientCounter < maxClients) {\n//   console.log(clientCounter);\n//   clientCounter += 1;\n// }\n\n// do {\n//   console.log(clientCounter);\n//   clientCounter += 1;\n// } while(clientCounter < maxClients)\n\n// let password = '';\n\n// do {\n//   password = prompt('Введіть пароль довший 4-х символів', '');\n// } while (password.length < 5);\n\n// console.log('Ввели пароль: ', password);\n\n// let clientCounter = 18;\n// const maxClients = 25;\n\n// while (clientCounter < maxClients) {\n//   console.log(clientCounter);\n//   clientCounter += 1;\n// }\n"],"names":["console","log","$bb3fb7f15fce07b5$var$badApples","$bb3fb7f15fce07b5$var$apples","$bb3fb7f15fce07b5$var$students","$bb3fb7f15fce07b5$var$rounded","Math","round","$bb3fb7f15fce07b5$var$roundedDown","floor","$bb3fb7f15fce07b5$var$roundedUp","ceil","$bb3fb7f15fce07b5$var$weightInt","Number","replace","trim","$bb3fb7f15fce07b5$var$heightInt","$bb3fb7f15fce07b5$var$heightPow","pow","$bb3fb7f15fce07b5$var$roundedBmi","toFixed","$bb3fb7f15fce07b5$var$a","charCodeAt","$bb3fb7f15fce07b5$var$b","$bb3fb7f15fce07b5$var$hours","$bb3fb7f15fce07b5$var$formatedTime","String","padStart"],"version":3,"file":"01-module_1-cycles.1d3f2a1d.js.map"}