{"mappings":"AAAA,SAAAA,gBAAAC,EAAAC,EAAAC,G,65BAAAC,QAAQC,IAAI,2DAEyBD,QAA7BC,IAAI,mBAQZ,IAAMC,SAAW,CACfC,OAAQ,CACN,CAAEC,KAAM,UAAWC,MAAO,KAAMC,SAAU,GAC1C,CAAEF,KAAM,UAAWC,MAAO,KAAMC,SAAU,GAC1C,CAAEF,KAAM,WAAYC,MAAO,KAAMC,SAAU,GAC3C,CAAEF,KAAM,OAAQC,MAAO,IAAKC,SAAU,IAExCC,eAAA,SAAeC,GACb,IAAMC,EAAaC,KAAKP,OAAOQ,MAAK,SAAAC,G,OAAMA,EAAGR,OAASI,C,IACtD,OAAKC,EAEEA,EAAWJ,MAAQI,EAAWH,SAFb,C,GAY5BN,QAAQC,IAAI,mBAOZ,IAAMY,UAAY,CAChBC,SAAU,GACVC,IAAA,SAAIC,GACF,IAAMC,EAAaC,cAAA,CACjBC,KAAM,WACHH,EAAO,CACVI,GAAIV,KAAKW,aACTC,UAAWZ,KAAKa,YAGlBb,KAAKI,SAASU,KAAKP,E,EAErBI,WAAA,WACE,MAAO,IAAMI,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,E,EAEpDL,QAAA,WACE,OAAOM,KAAKC,K,GAqBhB9B,QAAQC,IAAI,mBAWZ,IAAM8B,WAAa,CACjBC,KAAA,W,IAAKC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAKA,UAAA,GAAD,EAAGE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAOA,UAAA,GAAH,IACdxB,KAAKuB,EAAIA,EACTvB,KAAK0B,EAAIA,C,EAGXrB,IAAA,WACE,OAAOL,KAAKuB,EAAIvB,KAAK0B,C,EAGvBC,KAAA,WACE,OAAO3B,KAAKuB,EAAIvB,KAAK0B,C,GAmBnBE,IAAM,CACVC,QAAS,SACTC,QAAS,WACP,OAAOC,MAAKF,O,GAiDVG,QAAU,CACdC,SAAU,UACVC,YAAA,SAAYC,G,IAAEC,EAAFD,EAAEC,QAASV,EAAXS,EAAWT,EAAMW,EAAKC,yBAAtBH,EAAwB,CAAtB,UAAS,MACrB7C,QAAQC,IAAI6C,EAASV,EAAGW,E,GAS5BL,QAAQE,YAAY,CAClBE,QAAS,UACTG,UAAW,QACXhB,EAAG,IACHG,EAAG,IACHc,EAAG,MA8BLlD,QAAQC,IAAI","sources":["src/js/09-module-5_this_lesson-9.js"],"sourcesContent":["console.log('# Модуль 5. Заняття 9. Контекст виклику функції та this');\n\nconsole.log('---Example 1---');\n\n// ## Example 1 - Майстерня коштовностей\n\n// Напишіть метод `calcTotalPrice(stoneName)`, який приймає назву каменю.\n// повертає загальну вартість каменів з таким ім'ям, ціну за штуку, та кількість.\n\n// ```js\nconst chopShop = {\n  stones: [\n    { name: 'Emerald', price: 1300, quantity: 4 },\n    { name: 'Diamond', price: 2700, quantity: 3 },\n    { name: 'Sapphire', price: 1400, quantity: 7 },\n    { name: 'Ruby', price: 800, quantity: 2 },\n  ],\n  calcTotalPrice(stoneName) {\n    const foundStone = this.stones.find(el => el.name === stoneName);\n    if (!foundStone) return 0;\n\n    return foundStone.price * foundStone.quantity;\n  },\n};\n\n// console.log(chopShop.calcTotalPrice('Emeradld')); // 5200\n// console.log(chopShop.calcTotalPrice('Diamond')); // 8100\n// console.log(chopShop.calcTotalPrice('Sapphire')); // 9800\n// console.log(chopShop.calcTotalPrice('Ruby')); // 1600\n// ```\n\nconsole.log('---Example 2---');\n\n// ## Example 2 - Телефонна книга\n\n// Виконайте рефакторинг методів об'єкту `phonebook` щоб код запрацював.\n\n// ```js\nconst phonebook = {\n  contacts: [],\n  add(contact) {\n    const newContact = {\n      list: 'default',\n      ...contact,\n      id: this.generateId(),\n      createdAt: this.getDate(),\n    };\n\n    this.contacts.push(newContact);\n  },\n  generateId() {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  },\n  getDate() {\n    return Date.now();\n  },\n};\n\n// console.log(\n//   phonebook.add({\n//     name: 'Mango',\n//     email: 'mango@mail.com',\n//     list: 'friends',\n//   }),\n// );\n// console.log(\n//   phonebook.add({\n//     name: 'Poly',\n//     email: 'poly@hotmail.com',\n//   }),\n// );\n\n// console.log(phonebook)\n// ```\n\nconsole.log('---Example 3---');\n\n// ## Example 3 - Калькулятор\n\n// Створіть об'єкт `calculator` з трьома методами:\n\n// - `read(a, b)`- приймає два значення та зберігає їх як властивості об'єкта.\n// - `add()` - повертає суму збережених значень.\n// - `mult()` - перемножує збережені значення та повертає результат.\n\n// ```js\nconst calculator = {\n  read(a = 1, b = 100) {\n    this.a = a;\n    this.b = b;\n  },\n\n  add() {\n    return this.a + this.b;\n  },\n\n  mult() {\n    return this.a * this.b;\n  },\n};\n\n// const calc2 = {};\n// calculator.read.apply(calc2, [5, 78])\n// calculator.read.call(calc2, 5, 78);\n// const bindedRead = calculator.read.bind(calc2, 5, 78);\n// bindedRead()\n\n// console.log(calc2, calculator)\n\n// calculator.read(3, 4);\n// console.log(calculator.add())\n// console.log(calculator.mult())\n// ```\n\n// let something = 'Hello'\n\nconst cat = {\n  catName: 'Fluffy',\n  getName: () => {\n    return this.catName;\n  },\n};\n\n// const { getName } = cat;\n// console.log(getName());\n\n// console.log(cat.getName())\n\n// const object = {\n//   who: 'World',\n//   greet() {\n//     return `Hello, ${this.who}!`; //this - object\n//   },\n//   farewell: () => {\n//     return `Goodbye, ${this.who}!`; // this - window\n//   }\n// };\n// console.log(object.greet());\n// console.log(object.farewell());\n\n// console.log(number)\n// console.log(abc)\n\n// var number = 4;\n// let abc = 'foo';\n\n// var num = 2;\n// num = 5;\n\n// let num1 = 2;\n// num1 = 5;\n// console.log(num1)\n\n// function callback() {\n//   console.log(this.length); // What is logged?\n// }\n\n// const object = {\n//   length: 5,\n//   method(callback) {\n//     callback();\n//   }\n// };\n\n// object.method(callback, 1, 2);\n\n// callback()\n\nconst objABC1 = {\n  nickName: 'UserABC',\n  getNickName({ country, b, ...props }) {\n    console.log(country, b, props);\n    // console.log(\n    //   `Hi, I'm ${this.nickName}, I'm from ${country} and have got ${b} followers`\n    // );\n  },\n};\n\n// objABC1.getNickName('Ukraine', 34534446);\n// objABC1.getNickName(34534446, 'Ukraine');\nobjABC1.getNickName({\n  country: 'Ukraine',\n  followers: 4345435,\n  a: 'a',\n  b: 'b',\n  c: 'c',\n});\n\n// const objDAB1 = {\n//   nickName: 'UserDAB',\n// };\n\n// const objBAB1 = {\n//   nickName: 'UserBAB',\n// };\n\n// objABC1.getNickName.call(objDAB1, 'Ukraine', 12000);\n\n// const arrDAB = ['Ukraine', 12000];\n// objABC1.getNickName.call(objDAB1, ...arrDAB);\n\n// objABC1.getNickName.call(objBAB1, 'USA', 357689);\n\n// objABC1.getNickName.apply(objDAB1, ['Ukraine', 12000]);\n// objABC1.getNickName.apply(objBAB1, ['USA', 357689]);\n\n// const arrBAB = ['USA', 357689];\n// objABC1.getNickName.apply(objBAB1, arrBAB);\n\n// const abcbind1 = objABC1.getNickName.bind(objDAB1, 'BIND COUNTRY', 789678);\n// abcbind1()\n\n// const bindedGetNick = objABC1.getNickName.bind(objDAB1);\n// bindedGetNick('Australia', 1)\n\nconsole.log('------');\n"],"names":["_defineProperty","obj","key","value","console","log","chopShop","stones","name","price","quantity","calcTotalPrice","stoneName","foundStone","this","find","el","phonebook","contacts","add","contact","newContact","_objectSpread","list","id","generateId","createdAt","getDate","push","Math","random","toString","substr","Date","now","calculator","read","a","arguments","length","b","mult","cat","catName","getName","_this","objABC1","nickName","getNickName","_param","country","props","_objectWithoutProperties","followers","c"],"version":3,"file":"09-module-5_this_lesson-9.49e47401.js.map"}