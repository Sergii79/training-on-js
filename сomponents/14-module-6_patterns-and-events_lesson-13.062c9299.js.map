{"mappings":"AAEA,SAAAA,kBAAAC,EAAAC,I,m8BAAA,IAAMC,aAAeC,SAASC,cAAc,kBACtCC,OAASF,SAASC,cAAc,WAKpC,SAAOE,YAAYC,GACnB,GAA8B,WAA1BA,EAAMC,OAAOC,SAAjB,CAM6H,IAAvHC,EAAgBH,EAAMC,OAAOG,QAAQC,MAMoBP,OAAxDQ,YAAc,mBAAiCC,OAAdJ,GACxCL,OAAOU,MAAMH,MAAQF,CAZnB,C,CAkBJ,SAASM,qBAEP,I,IASAC,EAVMC,EAAQ,GACLC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMP,EAAQQ,oBACRC,EAAOlB,SAASmB,cAAc,UACpCD,EAAKE,KAAO,SACZF,EAAKV,QAAQC,MAAQA,EACrBS,EAAKN,MAAMS,gBAAkBZ,EAC7BS,EAAKI,UAAUC,IAAI,QACnBR,EAAMS,KAAKN,E,EAEbJ,EAAAf,cAAa0B,OAAbC,MAAAZ,EAAoBa,mBAAGZ,G,CAGzB,SAASE,oBAIP,IAHA,IACIR,EAAQ,IAEHO,EAAI,EAAGA,EAAI,EAAGA,IACrBP,GAJc,mBAIGmB,KAAKC,MAAsB,GAAhBD,KAAKE,WAGnC,OAAOrB,C,CA7CTV,aAAagC,iBAAiB,QAAS5B,aAqBvCU,qBA6BA,IAAMmB,OAASC,EAAEV,IAAI,EAAG,GACxBW,QAAQC,IAAIH,QAS6B,IAAnCI,SAAWpC,SAASC,cAAc,SAClCoC,aAAerC,SAASC,cAAc,WAEtCqC,cAAgBtC,SAASmB,cAAc,OAE7CiB,SAASL,iBAAiB,SAAS,SAAA3B,GAEjC,IAEuBmC,EAAnBnC,EAAMoC,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAGrBN,aAAa3B,YAAciC,EAASC,MAIpCV,QAAQC,IAAIO,EAAOC,E,IA4BrB,IAAME,OAAS,CACb,CACEC,MAAO,mBACQC,IAAV,+EAEP,CACED,MAAO,QACFC,IAAA,0EAEP,CACED,MAAO,OACHC,IAAC,iFAEP,CACED,MAAO,UACAC,IAAF,gFAEP,CACED,MAAO,QACFC,IAAA,0EAEP,CACED,MAAO,QACFC,IAAA,gFAIHC,mBAAqBhD,SAASC,cAAc,wBAC5CgD,iBAAmBjD,SAASC,cAAc,gBAC1CiD,gBAAkBlD,SAASC,cAAc,mBAEzCkD,YAAcN,OAAOO,QAAO,SAACC,EAAMnC,GACvC,OAAQmC,EAAQ,aAAiC1C,OAApBO,EAAK6B,IAAI,aAA+BpC,OAApBO,EAAK4B,MAAM,WAAoBnC,OAAXO,EAAK4B,MAAM,O,GAC/E,IAEHI,gBAAgBI,mBAAmB,YAAaH,aAEhDD,gBAAgBnB,iBAAiB,SAAS,SAAA3B,GAEV,QAA1BA,EAAMC,OAAOC,WAKjB2C,iBAAiBvC,YAAcN,EAAMC,OAAOyC,MAC5CE,mBAAmB1B,UAAUC,IAAI,W,IAGnCvB,SAAS+B,iBAAiB,WAAW,SAAAwB,GACpB,WAAXA,EAAEC,MACJR,mBAAmB1B,UAAUmC,OAAO,U,IAMxC,IAAMC,iBAAmB,CACvB,KAAM,CACJC,WAAY,oBACZC,OAAQ,WACRC,OAAQ,CAAC,cAAe,6BAE1B,KAAM,CACJF,WAAY,OACZC,OAAQ,SACRC,OAAQ,CAAC,OAAQ,wBAEnB,KAAM,CACJD,OAAQ,gBACRC,OAAQ,IAEV,KAAM,CACJF,WAAY,cAOhB,SAASG,cAAcC,EAASC,EAAIC,EAAMrB,GACxCmB,EAAQC,GAAIE,G,CAFAJ,cAAAJ,iBAAkB,KAAM,SAAU","sources":["src/js/14-module-6_patterns-and-events_lesson-13.js"],"sourcesContent":["//* Вибір кольорів з одним обробником подій:\n\nconst colorPalette = document.querySelector('.color-palette');\nconst output = document.querySelector('.output');\n\ncolorPalette.addEventListener('click', selectColor);\n\n// This is where delegation «magic» happens\nfunction selectColor(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  // Обов'язково перевіряємо мету кліка, щоб це точно була кнопка, тому що ми не хочемо обробляти кліки в елемент-контейнері. Для перевірки типу елемента використовуємо властивість nodeName.\n  // Тут event.target є елементом, який викликав подію, і nodeName дозволяє вам отримати назву тегу цього елемента. Зауважте, що nodeName повертається у верхньому регістрі, наприклад, \"BUTTON\", \"DIV\", тощо.\n\n  const selectedColor = event.target.dataset.color; // Цей рядок коду призначений для отримання значення атрибута data-color елемента, на якому виникла подія (в даному випадку, клік миші).\n  // Давайте розглянемо його крок за кроком:\n  // event - це об'єкт події, який передається у функцію-обробник, яка викликається при виникненні події.\n  // event.target - це елемент, який викликав подію. Якщо, наприклад, подія виникла при кліку на кнопці, event.target буде посилатися саме на цю кнопку.\n  // .dataset.color - це спосіб отримати значення атрибута data-color елемента. Властивість dataset надає доступ до всіх атрибутів data-* елемента у зручній формі. В нашому випадку, .dataset.color повертає значення атрибута data-color.\n  // Отже, const selectedColor = event.target.dataset.color; зберігає в змінній selectedColor значення атрибута data-color елемента, на якому виникла подія.\n  output.textContent = `Selected color: ${selectedColor}`;\n  output.style.color = selectedColor;\n}\n\n// Some helper functions to render palette items\ncreatePaletteItems();\n\nfunction createPaletteItems() {\n  const items = [];\n  for (let i = 0; i < 60; i++) {\n    const color = getRandomHexColor();\n    const item = document.createElement('button');\n    item.type = 'button';\n    item.dataset.color = color;\n    item.style.backgroundColor = color;\n    item.classList.add('item');\n    items.push(item);\n  }\n  colorPalette.append(...items);\n}\n\nfunction getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\n//*\n\nconst result = _.add(2, 3);\nconsole.log(result); // 5\n\n/** CALCULATOR */\n\n// 1. Отримати елемент контейнера(форма). Повішати слухач input\n// 2. Взяти значення кількості і оновити його в DOM\n// 3. Взяти значення інпутів, перемножити\n// 4. Додали в DOM елемент для відобрадення результів(1 раз)\n\nconst formElem = document.querySelector('.form');\nconst quantityElem = document.querySelector('.amount');\n\nconst resultElement = document.createElement('div');\n\nformElem.addEventListener('input', event => {\n  // console.log(event.target);\n  const {\n    elements: { price, quantity },\n  } = event.currentTarget;\n\n  quantityElem.textContent = quantity.value;\n  // if (event.target.id === 'quantity') {\n  //   quantityElem.textContent = event.target.value;\n  // }\n  console.log(price, quantity);\n  // console.log(event.currentTarget.elements);\n});\n\n// formElem.insertAdjacentHTML(\n//   'beforeend',\n//   `<div>Загальна вартість <code id=\"resultVal\"></code> ГРН</div>`\n// );\n\n// const resultValueElem = document.getElementById('resultVal');\n\n// const formHandler = () => {\n//   const {\n//     elements: { price, quantity },\n//   } = formElem;\n\n//   quantityElem.textContent = quantity.value;\n\n//   const result = quantity.value * price.value;\n//   resultValueElem.textContent = result.toFixed(2);\n// };\n\n// formElem.addEventListener('input', formHandler);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Window#events\n// window.addEventListener('DOMContentLoaded', formHandler);\n\n/** GALLERY */\nconst images = [\n  {\n    title: 'Коник стрибунець',\n    src: 'https://cdn.pixabay.com/photo/2022/11/07/00/27/grasshopper-7575278_1280.jpg',\n  },\n  {\n    title: 'Фрукт',\n    src: 'https://cdn.pixabay.com/photo/2022/10/22/18/10/quince-7539818_1280.jpg',\n  },\n  {\n    title: 'Люди',\n    src: 'https://cdn.pixabay.com/photo/2022/11/05/22/43/against-light-7572922_1280.jpg',\n  },\n  {\n    title: 'Годиник',\n    src: 'https://cdn.pixabay.com/photo/2022/11/06/13/36/architecture-7574031_1280.jpg',\n  },\n  {\n    title: 'Метро',\n    src: 'https://cdn.pixabay.com/photo/2022/10/31/17/57/subway-7560452_1280.jpg',\n  },\n  {\n    title: 'Хмари',\n    src: 'https://cdn.pixabay.com/photo/2022/10/24/09/54/switzerland-7543063_1280.jpg',\n  },\n];\n\nconst modalcontainerElem = document.querySelector('.image-modal-overlay');\nconst modalContentElem = document.querySelector('.image-modal');\nconst imagesContainer = document.querySelector('.images-gallery');\n\nconst imgElemtens = images.reduce((acum, item) => {\n  return (acum += `<img src=\"${item.src}\" title=\"${item.title}\" alt=\"${item.title}\" />`);\n}, '');\n\nimagesContainer.insertAdjacentHTML('beforeend', imgElemtens);\n\nimagesContainer.addEventListener('click', event => {\n  //1\n  if (event.target.nodeName !== 'IMG') return;\n\n  //2\n  // if (event.target === event.currentTarget ) return;\n\n  modalContentElem.textContent = event.target.title;\n  modalcontainerElem.classList.add('visible');\n});\n\ndocument.addEventListener('keydown', e => {\n  if (e.code === 'Escape') {\n    modalcontainerElem.classList.remove('visible');\n  }\n});\n\n/** freeCodeCamp  */\n// Setup\nconst recordCollection = {\n  2548: {\n    albumTitle: 'Slippery When Wet',\n    artist: 'Bon Jovi',\n    tracks: ['Let It Rock', 'You Give Love a Bad Name'],\n  },\n  2468: {\n    albumTitle: '1999',\n    artist: 'Prince',\n    tracks: ['1999', 'Little Red Corvette'],\n  },\n  1245: {\n    artist: 'Robert Palmer',\n    tracks: [],\n  },\n  5439: {\n    albumTitle: 'ABBA Gold',\n  },\n};\n\n//перший варіант не працює records[id].hasOwnPropery(\"tracks\")\n// Пропущена буква t\nupdateRecords(recordCollection, 2468, 'tracks', 'Free');\nfunction updateRecords(records, id, prop, value) {\n  records[id].has;\n\n  // if (prop !== 'tracks' && value !== '') {\n  //   records[id][prop] = value;\n  // } else if (\n  //   prop === 'tracks' &&\n  //   records[id].hasOwnProperty('tracks') === false\n  // ) {\n  //   records[id][prop] = [value];\n  // } else if (prop === 'tracks' && value !== '') {\n  //   records[id][prop].push(value);\n  // } else if (value === '') {\n  //   delete records[id][prop];\n  // }\n  // return records;\n}\n\n//  другий варіант працює\n\n// function updateRecords(records, id, prop, value) {\n//   if (prop !== \"tracks\" && value !== \"\") {\n//     records[id][prop] = value;\n//   } else if (\n//     prop === \"tracks\" &&\n//     value !== \"\" &&\n//     records[id].hasOwnProperty(\"tracks\") === false\n//   ) {\n//     records[id][prop] = [value];\n//   } else if (prop === \"tracks\" && value !== \"\") {\n//     records[id][prop].push(value);\n//   } else if (value === \"\") {\n//     delete records[id][prop];\n//   }\n//   return records;\n// }\n\n// console.log(updateRecords(recordCollection, 5439, \"artist\", \"ABBA\"));\n// console.log(\n//tracks should have the string Take a Chance on Me as the last and only element.\n// console.log(updateRecords(recordCollection, 2548, \"artist\", \"\")); //artist should not be set\n// console.log(\n//   updateRecords(recordCollection, 1245, \"tracks\", \"Addicted to Love\")\n// ); //tracks should have the string Addicted to Love as the last element.\n// console.log(updateRecords(recordCollection, 2468, 'tracks', 'Free')); //tracks should have the string 1999 as the first element.\n//pdateRecords(recordCollection, 2468, \"tracks\", \"Free\"), //tracks tracks should not be set\n\n// console.log(\n//   updateRecords(recordCollection, 5439, \"tracks\", \"Take a Chance on Me\")\n// );\n\n// console.log(\n//   updateRecords(recordCollection, 1245, \"tracks\", \"Take a Chance on Me\")\n// );\n\n// console.log(updateRecords(recordCollection, 2548, \"tracks\", \"\"));\n"],"names":["_arrayLikeToArray","arr","len","colorPalette","document","querySelector","output","selectColor","event","target","nodeName","selectedColor","dataset","color","textContent","concat","style","createPaletteItems","_colorPalette","items","i","getRandomHexColor","item","createElement","type","backgroundColor","classList","add","push","append","apply","_toConsumableArray","Math","floor","random","addEventListener","result","_","console","log","formElem","quantityElem","resultElement","_elements","currentTarget","elements","price","quantity","value","images","title","src","modalcontainerElem","modalContentElem","imagesContainer","imgElemtens","reduce","acum","insertAdjacentHTML","e","code","remove","recordCollection","albumTitle","artist","tracks","updateRecords","records","id","prop","has"],"version":3,"file":"14-module-6_patterns-and-events_lesson-13.062c9299.js.map"}