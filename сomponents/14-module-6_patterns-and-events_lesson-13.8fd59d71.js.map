{"mappings":"AAAA,SAAAA,kBAAAC,EAAAC,I,m8BAAAC,QAAQC,IAAI,UAIsB,IAA5BC,aAAeC,SAASC,cAAc,kBACtCC,OAASF,SAASC,cAAc,WAKpC,SAAOE,YAAYC,GACnB,GAA8B,WAA1BA,EAAMC,OAAOC,SAAjB,CAM6H,IAAvHC,EAAgBH,EAAMC,OAAOG,QAAQC,MAM3CP,OAAOQ,YAAc,mBAAiCC,OAAdJ,GACxCL,OAAOU,MAAMH,MAAQF,CAZnB,C,CAkBJ,SAASM,qBAEP,I,IASAC,EAVMC,EAAQ,GACLC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMP,EAAQQ,oBACRC,EAAOlB,SAASmB,cAAc,UACpCD,EAAKE,KAAO,SACZF,EAAKV,QAAQC,MAAQA,EACrBS,EAAKN,MAAMS,gBAAkBZ,EAC7BS,EAAKI,UAAUC,IAAI,QACnBR,EAAMS,KAAKN,E,EAEbJ,EAAAf,cAAa0B,OAAbC,MAAAZ,EAAoBa,mBAAGZ,G,CAGzB,SAASE,oBAIP,IAHA,IACIR,EAAQ,IAEHO,EAAI,EAAGA,EAAI,EAAGA,IACrBP,GAJc,mBAIGmB,KAAKC,MAAsB,GAAhBD,KAAKE,WAGnC,OAAOrB,C,CA7CTV,aAAagC,iBAAiB,QAAS5B,aAqBvCU,qBA6BA,IAAMmB,OAASC,EAAEV,IAAI,EAAG,GACxB1B,QAAQC,IAAIkC","sources":["src/js/14-module-6_patterns-and-events_lesson-13.js"],"sourcesContent":["console.log('Hello!');\n\n//* Вибір кольорів з одним обробником подій:\n\nconst colorPalette = document.querySelector('.color-palette');\nconst output = document.querySelector('.output');\n\ncolorPalette.addEventListener('click', selectColor);\n\n// This is where delegation «magic» happens\nfunction selectColor(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  // Обов'язково перевіряємо мету кліка, щоб це точно була кнопка, тому що ми не хочемо обробляти кліки в елемент-контейнері. Для перевірки типу елемента використовуємо властивість nodeName.\n  // Тут event.target є елементом, який викликав подію, і nodeName дозволяє вам отримати назву тегу цього елемента. Зауважте, що nodeName повертається у верхньому регістрі, наприклад, \"BUTTON\", \"DIV\", тощо.\n\n  const selectedColor = event.target.dataset.color; // Цей рядок коду призначений для отримання значення атрибута data-color елемента, на якому виникла подія (в даному випадку, клік миші).\n  // Давайте розглянемо його крок за кроком:\n  // event - це об'єкт події, який передається у функцію-обробник, яка викликається при виникненні події.\n  // event.target - це елемент, який викликав подію. Якщо, наприклад, подія виникла при кліку на кнопці, event.target буде посилатися саме на цю кнопку.\n  // .dataset.color - це спосіб отримати значення атрибута data-color елемента. Властивість dataset надає доступ до всіх атрибутів data-* елемента у зручній формі. В нашому випадку, .dataset.color повертає значення атрибута data-color.\n  // Отже, const selectedColor = event.target.dataset.color; зберігає в змінній selectedColor значення атрибута data-color елемента, на якому виникла подія.\n  output.textContent = `Selected color: ${selectedColor}`;\n  output.style.color = selectedColor;\n}\n\n// Some helper functions to render palette items\ncreatePaletteItems();\n\nfunction createPaletteItems() {\n  const items = [];\n  for (let i = 0; i < 60; i++) {\n    const color = getRandomHexColor();\n    const item = document.createElement('button');\n    item.type = 'button';\n    item.dataset.color = color;\n    item.style.backgroundColor = color;\n    item.classList.add('item');\n    items.push(item);\n  }\n  colorPalette.append(...items);\n}\n\nfunction getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\n//*\n\nconst result = _.add(2, 3);\nconsole.log(result); // 5\n"],"names":["_arrayLikeToArray","arr","len","console","log","colorPalette","document","querySelector","output","selectColor","event","target","nodeName","selectedColor","dataset","color","textContent","concat","style","createPaletteItems","_colorPalette","items","i","getRandomHexColor","item","createElement","type","backgroundColor","classList","add","push","append","apply","_toConsumableArray","Math","floor","random","addEventListener","result","_"],"version":3,"file":"14-module-6_patterns-and-events_lesson-13.8fd59d71.js.map"}