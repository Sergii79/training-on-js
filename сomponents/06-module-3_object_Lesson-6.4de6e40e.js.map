{"mappings":"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","sources":["src/js/06-module-3_object_Lesson-6.js"],"sourcesContent":["console.log('---Example 4---');\n\n// ## Example 4 - Комплексні завдання\n\n// Напиши скрипт управління особистим кабінетом інтернет банку. Є об'єкт `account`\n// в якому необхідно реалізувати методи для роботи з балансом та історією\n// транзакцій.\n\n// ```js\n// /*\n//  * Типів транзакцій всього два.\n//  * Можна покласти чи зняти гроші з рахунку.\n//  */\nconst TransactionTypes = {\n  DEPOSIT: 'deposit',\n  WITHDRAW: 'withdraw',\n};\n\nlet transactionId = 1;\n\n// /*\n//  * Кожна транзакція це об'єкт із властивостями: id, type та amount\n//  */\n\nconst account = {\n  // Поточний баланс рахунку\n  balance: 0,\n\n  // Історія транзакцій\n  transactions: [],\n\n  /*\n   * Метод створює та повертає об'єкт транзакції.\n   * Приймає суму та тип транзакції.\n   */\n  createTransaction(amount, type) {\n    transactionId += 1;\n\n    return {\n      amount: amount,\n      type: type,\n      id: transactionId,\n    };\n  },\n\n  /*\n   * Метод, що відповідає за додавання суми до балансу.\n   * Приймає суму транзакції.\n   * Викликає createTransaction для створення об'єкта транзакції\n   * після чого додає його до історії транзакцій\n   */\n  deposit(amount) {\n    this.balance += amount;\n    const newTransaction = this.createTransaction(\n      amount,\n      TransactionTypes.DEPOSIT\n    );\n    this.transactions.push(newTransaction);\n  },\n\n  /*\n   * Метод, що відповідає за зняття суми з балансу.\n   * Приймає суму транзакції.\n   * Викликає createTransaction для створення об'єкта транзакції\n   * після чого додає його до історії транзакцій.\n   *\n   * Якщо amount більше ніж поточний баланс, виводь повідомлення\n   * про те, що зняття такої суми не можливе, недостатньо коштів.\n   */\n  withdraw(amount) {\n    this.balance -= amount;\n    this.transactions.push(\n      this.createTransaction(amount, TransactionTypes.WITHDRAW)\n    );\n  },\n\n  getMinTransaction() {\n    let minAmount = this.transactions[0].amount;\n    let minIndex = 0;\n\n    for (let transaction of this.transactions) {\n      const transactionKeys = Object.keys(transaction);\n\n      for (let key of transactionKeys) {\n        console.log(key, transaction[key]);\n      }\n\n      if (transaction.amount < minAmount) {\n        minAmount = transaction.amount;\n        minIndex = this.transactions.indexOf(transaction);\n      }\n    }\n\n    return this.transactions[minIndex];\n  },\n\n  /*\n   * Метод повертає поточний баланс\n   */\n  getBalance() {\n    return this.balance;\n  },\n\n  printTransactions() {\n    console.log(this.transactions);\n  },\n\n  /*\n   * Метод шукає та повертає об'єкт транзакції по id\n   */\n  getTransactionDetails(id) {\n    for (let item of this.transactions) {\n      if (item.id === id) return item;\n    }\n\n    return {};\n  },\n\n  /*\n   * Метод повертає кількість коштів\n   * певного типу транзакції з усієї історії транзакцій\n   */\n  getTransactionTotal(type) {\n    let result = 0;\n\n    for (let item of this.transactions) {\n      if (item.type === type) {\n        console.log(item);\n        result += item.amount;\n      }\n    }\n\n    return result;\n  },\n};\n// ```\n\naccount.deposit(1000);\naccount.deposit(500);\naccount.deposit(300);\n\naccount.withdraw(100);\naccount.withdraw(400);\naccount.withdraw(50);\naccount.printTransactions();\n\nconst currentbalance = account.getBalance();\nconsole.log('currentBalance = ', currentbalance);\n\nconst minTrans = account.getMinTransaction();\nconsole.log('Min Transaction = ', minTrans);\n\n// const transaction = account.getTransactionDetails(3);\n// const transaction1 = account.getTransactionDetails(1);\n\n// console.log(transaction)\n// console.log(transaction1)\n\nconst totalDeposit = account.getTransactionTotal(TransactionTypes.DEPOSIT);\nconsole.log(totalDeposit);\n\nconst totalWithdraw = account.getTransactionTotal(TransactionTypes.WITHDRAW);\nconsole.log(totalWithdraw);\n"],"names":["console","log","$da53621fa77ed947$var$TransactionTypes","$da53621fa77ed947$var$transactionId","$da53621fa77ed947$var$account","balance","transactions","createTransaction","amount","type","id","deposit","this","newTransaction","push","withdraw","getMinTransaction","minAmount","minIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","transaction","value","transactionKeys","Object","keys","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","key","err","return","indexOf","getBalance","printTransactions","getTransactionDetails","item","getTransactionTotal","result","$da53621fa77ed947$var$currentbalance","$da53621fa77ed947$var$minTrans","$da53621fa77ed947$var$totalDeposit","$da53621fa77ed947$var$totalWithdraw"],"version":3,"file":"06-module-3_object_Lesson-6.4de6e40e.js.map"}